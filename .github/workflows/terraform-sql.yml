name: 'Terraform_sql'

on: [workflow_dispatch]
permissions:
      id-token: write
      contents: read

defaults:
  run:
    shell: bash
  
env: 
          ROOT_PATH: '${{github.workspace}}/IaC - MSSQL'
          ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
          ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
          ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
jobs:
   terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest
      
    steps:
    - name: Checkout
      uses: actions/checkout@v3
        

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: terraform init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform Plan
      run: terraform plan 
      working-directory: ${{ env.ROOT_PATH }}
      
    terraform_apply:
      needs: 'terraform_plan'
      name: 'Create MSSQL server with database'
      runs-on: ubuntu-latest
        
      steps:
      - name: Checkout
        uses: actions/checkout@v3
          

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: terraform init
        run: terraform init
        working-directory: ${{ env.ROOT_PATH }}

      - name: terraform apply
        run: terraform apply -auto-approve 
        working-directory: ${{ env.ROOT_PATH }}
      
    create_table:
      needs: 'terraform_apply'
      name: 'Create the table'
      runs-on: ubuntu-latest
        
      steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Run python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' 
        
      - name: run the script
        run: python3 createsql.py
        working-directory: ${{ env.ROOT_PATH }}/python

