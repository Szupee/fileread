resource "azurerm_network_interface" "fe-vm02-nic" {
  name                = "fe-vm02-nic"
  resource_group_name = azurerm_resource_group.tfr-rg1.name
  location            = azurerm_resource_group.tfr-rg1.location

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.tfr-fe.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.tfr-pip2.id
  }
}

data "azurerm_public_ip" "firstpipi2" {
  name                = azurerm_public_ip.tfr-pip2.name
  resource_group_name = azurerm_resource_group.tfr-rg1.name

}

resource "azurerm_linux_virtual_machine" "tfe-vm02" {
  name                = "fe-vm02"
  resource_group_name = azurerm_resource_group.tfr-rg1.name
  location            = azurerm_resource_group.tfr-rg1.location
  size                = "Standard_B1s"
  admin_username      = "adminuser"
  admin_password      = "Password123!"
  availability_set_id = azurerm_availability_set.webas.id
  network_interface_ids = [
    azurerm_network_interface.fe-vm02-nic.id,
  ]
  disable_password_authentication = "false"

  connection {
    type     = "ssh"
    user     = "adminuser"
    password = "Password123!"
    host     = data.azurerm_public_ip.firstpipi2.ip_address

  }


  provisioner "remote-exec" {
    inline = [

      "mkdir /home/adminuser/templates",

    ]

  }

  provisioner "file" {
    source      = "webapp/webapp1.py"
    destination = "/home/adminuser/webapp1.py"

  }

  provisioner "file" {
    source      = "webapp\\file_read.py"
    destination = "/home/adminuser/file_read.py"
  }

  provisioner "file" {
    source      = "webapp/ini.py"
    destination = "/home/adminuser/ini.py"
  }

  provisioner "file" {
    source      = "webapp/templates/index.html"
    destination = "/home/adminuser/templates/index.html"
  }


  provisioner "remote-exec" {
    inline = [
      "sudo apt-get update -y && sudo apt-get install -y",
      "sudo apt install python3-pip -y",
      "sudo pip3 install flask",
      "sudo pip3 install flask_wtf",
      "sudo pip3 install wtforms",
      "sudo pip3 install azure-storage-blob",
      "sudo pip3 install azure-storage-queue",
      "sudo python3 webapp1.py"
    ]

  }


  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }
  #custom_data = filebase64("fe-custom.tpl")

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "18.04-LTS"
    version   = "latest"
  }
}